using Pkg
# –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ–±—É—á–µ–Ω–∏—è –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π.
Pkg.add(PackageSpec(name="Flux", version="0.14.25"))
# –î–ª—è –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–µ—à–µ–Ω–∏—è –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π
Pkg.add(PackageSpec(name="DifferentialEquations", version="7.15.0"))
# –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∑–∞–¥–∞—á–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º.
Pkg.add(PackageSpec(name="SciMLSensitivity", version="7.72.0"))
# –î–ª—è –º–µ—Ç–æ–¥–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
Pkg.add(PackageSpec(name="Optimisers", version="0.3.4"))
Pkg.add("BSON")
Pkg.status()
using Optimisers
using SciMLSensitivity
using DifferentialEquations
using Flux
using Random
using BSON

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–∞—è—Ç–Ω–∏–∫–∞.
m = Float32(0.2)   # –ú–∞—Å—Å–∞ —à–∞—Ä–∏–∫–∞ (–∫–≥).
M = Float32(0.5)   # –ú–∞—Å—Å–∞ —Ç–µ–ª–µ–∂–∫–∏ (–∫–≥).
L = Float32(0.3)   # –î–ª–∏–Ω–∞ –º–∞—è—Ç–Ω–∏–∫–∞ (–º).
g = Float32(9.81)  # –£—Å–∫–æ—Ä–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–∞–¥–µ–Ω–∏—è (–º/—Å^2).

#= 
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∞—Ç—á–∞ (–Ω–∞–±–æ—Ä–∞) —Å–ª—É—á–∞–π–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏.

–ê—Ä–≥—É–º–µ–Ω—Ç—ã:
N ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π) –≤ –±–∞—Ç—á–µ.
L ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–ª—è –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–µ–ª–µ–∂–∫–∏ (–≤ –º–µ—Ç—Ä–∞—Ö).
=#
function generate_random_batch(N, L)
    # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
    elements = []
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏—Å–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è 
    # –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã.
    # –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –ø–æ–¥—Ä–æ–±–Ω–æ –¥–µ–ª–∏—Ç—Å—è –¥–∏–∞–ø–∞–∑–æ–Ω –∫–∞–∂–¥–æ–≥–æ 
    # –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (—É–≥–æ–ª, —É–≥–ª–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å, –ø–æ–ª–æ–∂–µ–Ω–∏–µ, –ª–∏–Ω–µ–π–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å) 
    # –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–æ—á–∫–∏.
    n_values = 20
    # –®–∞–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–≥–ª–∞ –º–∞—è—Ç–Ω–∏–∫–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [-œÄ/2, œÄ/2].
    angle_step = œÄ / n_values
    # –®–∞–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–≥–ª–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [-100, 100].
    œâ_step = 100 * 2 / n_values
    # –®–∞–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–µ–ª–µ–∂–∫–∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [-L, L].
    x_step = L * 2 / n_values
    #v_step = 100*2/n_values

    # –°–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π —É–≥–ª–∞ –º–∞—è—Ç–Ω–∏–∫–∞ –æ—Ç -œÄ/2 –¥–æ œÄ/2 —Å —à–∞–≥–æ–º angle_step.
    angle_values = collect(-œÄ/2 : angle_step : œÄ/2)
    # –°–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π —É–≥–ª–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –æ—Ç -100 –¥–æ 100 —Å —à–∞–≥–æ–º œâ_step.
    œâ_values = collect(-100 : œâ_step : 100)
    # –°–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–µ–ª–µ–∂–∫–∏ –æ—Ç -L –¥–æ L —Å —à–∞–≥–æ–º x_step.
    x_values = collect(-L : x_step : L)

    # –¶–∏–∫–ª –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è N —Ä–∞–∑ (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –±–∞—Ç—á–µ).
    for _ in 1:N
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–µ–ª–µ–∂–∫–∏.

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –º–∞—Å—Å–∏–≤–∞.
        rand_angle = rand(angle_values)
        rand_œâ = rand(œâ_values)
        rand_x = rand(x_values)
        #v[-100 100] 
        rand_v = rand(œâ_values)
        
        # –í–µ–∫—Ç–æ—Ä –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è u0 –≤ —Ñ–æ—Ä–º–∞—Ç–µ Float32:
        # rand_angle: –£–≥–æ–ª –º–∞—è—Ç–Ω–∏–∫–∞.
        # rand_œâ: –£–≥–ª–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –º–∞—è—Ç–Ω–∏–∫–∞.
        # rand_x: –ü–æ–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–ª–µ–∂–∫–∏.
        # rand_v: –õ–∏–Ω–µ–π–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ç–µ–ª–µ–∂–∫–∏.
        u0 = Float32[rand_angle, rand_œâ, rand_x, rand_v]
        # –í–µ–∫—Ç–æ—Ä u0 –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤ elements.
        push!(elements, u0)
    end

    # –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∏—Ç–µ—Ä–∞—Ü–∏–π —Ü–∏–∫–ª –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ elements, 
    # —Å–æ–¥–µ—Ä–∂–∞—â–∏–π N —Å–ª—É—á–∞–π–Ω—ã—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã.
    return elements
end

#= 
–£—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è. –û–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –º–æ–¥–µ–ª—å —Å–∏—Å—Ç–µ–º—ã "–º–∞—è—Ç–Ω–∏–∫ –Ω–∞ —Ç–µ–ª–µ–∂–∫–µ" 
–≤ –≤–∏–¥–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–π –¥–≤–∏–∂–µ–Ω–∏—è.

–ê—Ä–≥—É–º–µ–Ω—Ç—ã:
du: –í–µ–∫—Ç–æ—Ä, –∫—É–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–π).
    –ù–∞–ø—Ä–∏–º–µ—Ä, du = [dŒ∏, dœâ, dx, dv], –≥–¥–µ:
    ùëëŒ∏/ùëëùë° = œâ,
    ùëëùúî/ùëëùë° = —É–≥–ª–æ–≤–æ–µ¬†—É—Å–∫–æ—Ä–µ–Ω–∏–µ¬†–º–∞—è—Ç–Ω–∏–∫–∞,
    ùëëùë•/ùëëùë° = ùë£,
    ùëëùë£/ùëëùë° = –ª–∏–Ω–µ–π–Ω–æ–µ¬†—É—Å–∫–æ—Ä–µ–Ω–∏–µ¬†—Ç–µ–ª–µ–∂–∫–∏.
u:  –í–µ–∫—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π:
    Œ∏ ‚Äî —É–≥–æ–ª –º–∞—è—Ç–Ω–∏–∫–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ (–≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö).
    œâ ‚Äî —É–≥–ª–æ–≤—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –º–∞—è—Ç–Ω–∏–∫–∞ (—Ä–∞–¥/—Å).
    x ‚Äî –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–ª–µ–∂–∫–∏ (–º).
    v ‚Äî –ª–∏–Ω–µ–π–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å —Ç–µ–ª–µ–∂–∫–∏ (–º/—Å). 
p:  –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–Ω–µ—à–Ω–µ–≥–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è. –ó–¥–µ—Å—å —ç—Ç–æ –≤–µ–∫—Ç–æ—Ä —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º:
    force (ùêπ) ‚Äî —Å–∏–ª–∞, –ø—Ä–∏–ª–æ–∂–µ–Ω–Ω–∞—è –∫ —Ç–µ–ª–µ–∂–∫–µ.
t:  –í—Ä–µ–º—è. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –≤—Ä–µ–º—è —è–≤–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —É—Ä–∞–≤–Ω–µ–Ω–∏—è—Ö, –Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è 
    –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ —Ä–µ—à–µ–Ω–∏—è –û–î–£ (–æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—ã–µ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ 
    —É—Ä–∞–≤–Ω–µ–Ω–∏—è).
=#
function cartpole!(du, u, p, t)
    # –ò–∑ –≤–µ–∫—Ç–æ—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è —É–≥–ª–∞, —É–≥–ª–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏, –ø–æ–ª–æ–∂–µ–Ω–∏—è –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏.
    Œ∏, œâ, x, v = u
    force = p[1]  # —Å–∏–ª–∞, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫ —Ç–µ–ª–µ–∂–∫–µ

    # –£—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è.
    # –£–≥–ª–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –º–∞—è—Ç–Ω–∏–∫–∞ ùúî —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π —É–≥–ª–∞ ùúÉ (ùëëùúÉ/ùëëùë°=œâ).
    dŒ∏ = œâ
    
    # –õ–∏–Ω–µ–π–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ç–µ–ª–µ–∂–∫–∏ ùë£ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π –ø–æ–ª–æ–∂–µ–Ω–∏—è ùë• (ùëëùë•/ùëëùë°=ùë£).
    dx = v

    # –õ–∏–Ω–µ–π–Ω–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ —Ç–µ–ª–µ–∂–∫–∏ (ùëëùë£/ùëëùë°).
    dv = (m * g * sin(Œ∏) * cos(Œ∏) - 7 / 3 * (force + m * L / 2 * œâ^2 * sin(Œ∏)))/(m * cos(Œ∏)^2 - 7 /3 * M)
    #= 
    –£–≥–ª–æ–≤–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ –º–∞—è—Ç–Ω–∏–∫–∞ (ùëëùúî/ùëëùë°), –∑–∞–≤–∏—Å–∏—Ç –æ—Ç:
    —Å–∏–ª—ã —Ç—è–∂–µ—Å—Ç–∏ (ùëî), 
    —É–≥–ª–∞ –º–∞—è—Ç–Ω–∏–∫–∞ (sin(ùúÉ)), 
    –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ª–∏–Ω–µ–π–Ω–æ–≥–æ —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ç–µ–ª–µ–∂–∫–∏ (ùëëùë£), –∫–æ—Ç–æ—Ä–∞—è –≤–ª–∏—è–µ—Ç –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ –º–∞—è—Ç–Ω–∏–∫–∞ —á–µ—Ä–µ–∑ —Å–∏–ª—É —Ä–µ–∞–∫—Ü–∏–∏.
    =#
    dœâ = 3 / (7L / 2) * (g * sin(Œ∏) - dv * cos(Œ∏))

    # –ó–∞–ø–∏—Å—å –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã—Ö –≤ du.
    du[1] = dŒ∏
    du[2] = dœâ
    du[3] = dx
    du[4] = dv
end

# –§—É–Ω–∫—Ü–∏—è –ø–æ—Ç–µ—Ä—å (–æ—à–∏–±–æ–∫) –º–æ–¥–µ–ª–∏.
# u0: –ù–∞–±–æ—Ä –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π u=[Œ∏,œâ,x,v]
# target_angle: –¶–µ–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —É–≥–ª–∞ ùúÉ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –¥–æ—Å—Ç–∏—á—å.
function loss(u0, target_angle)
    # –†–µ—à–µ–Ω–∏–µ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏—Ä—É–µ—Ç—Å—è –Ω–∞ 
    # –Ω–µ–±–æ–ª—å—à–æ–º –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–∏: –æ—Ç 0 –¥–æ 0.02 —Å–µ–∫—É–Ω–¥.
    # –ù–µ–±–æ–ª—å—à–æ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω—É–∂–µ–Ω –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è 
    # —Å–∏–ª—ã ùêπ –Ω–∞ —Å–∏—Å—Ç–µ–º—É.
    tspan = (Float32(0.0), Float32(0.02))
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å –Ω—É–ª—è –∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è 
    # –æ—à–∏–±–æ–∫ –ø–æ –≤—Å–µ–º—É –±–∞—Ç—á—É ùë¢0.
    loss = 0
    # u0 –±–∞—Ç—á –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ.
    for u in u0
        # –î–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è ùë¢, –º–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏–ª—É ùêπ. –≠—Ç–æ 
        # –∑–Ω–∞—á–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç—å—é model.
        p = model(u)
        # –°–æ–∑–¥–∞—ë—Ç—Å—è –æ–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏ –û–î–£ prob.
        prob = ODEProblem(cartpole!, u, tspan, p)
        # –†–µ—à–∞–µ—Ç—Å—è –∑–∞–¥–∞—á–∞ prob, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è 
        # —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ–º —Å–∏–ª—ã ùêπ –Ω–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ 
        # –≤—Ä–µ–º–µ–Ω–∏ tspan.
        sol = solve(prob)
        # –†–∞—Å—á—ë—Ç –æ—à–∏–±–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
        loss += abs(sol[1, end] - target_angle)/length(u0) 
    end   
    return loss
end

function test_model(model, u0)
    println("–ù–∞—á–∞–ª—å–Ω—ã–π —É–≥–æ–ª ", u0[1])
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–∏–ª—É –æ—Ç –º–æ–¥–µ–ª–∏.
    p = model(u0)
    println("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è —Å–∏–ª–∞ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è F ", p[1])
    
    # –í—Ä–µ–º—è –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Ç–µ–ª–µ–∂–∫—É.
    tspan = (Float32(0.0), Float32(0.02))
    
    # –ü—Ä–∏ –ø–æ–º–æ—â–∏ ODEProblem –ø–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á—É –¥–∏—Ñ—Ñ. —É—Ä-–∏–π.
    prob = ODEProblem(cartpole!, u0, tspan, p)
    
    # –†–µ—à–∞–µ–º —Å–∏—Å—Ç–µ–º—É.
    sol = solve(prob)
    
    println("–£–≥–æ–ª Œ∏ –ø–æ—Å–ª–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è: ", sol[1, end][1])
    println("–°–∫–æ—Ä–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–≥–ª–∞ œâ –ø–æ—Å–ª–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è: ", sol[2, end])
    println("–ü–æ–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–ª–µ–∂–∫–∏ x –ø–æ—Å–ª–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è: ", sol[3, end])
    println("–°–∫–æ—Ä–æ—Å—Ç—å —Ç–µ–ª–µ–∂–∫–∏ v –ø–æ—Å–ª–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è: ", sol[4, end])

    return sol
end

#–ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
model_path = "model.bson"
BSON.@load model_path model
println("–ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ $model_path")
u0 = Float32[pi/6, 0, 0, 0]
test_model(model, u0)